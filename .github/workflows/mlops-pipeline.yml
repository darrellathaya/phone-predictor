name: CI-CD Pipeline

on:
  push:
    branches:
      - main
    # paths:
    #     - "data/**"

jobs:
# First Job: Pre-Build
  pre-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Upload mlruns as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: mlruns/

      - name: Upload model files as artifact
        uses: actions/upload-artifact@v4
        with:
          name: models
          path: models/
  
  # Second Job: Model Testing    
  model-test:
    runs-on: ubuntu-latest
    needs: pre-build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Download mlruns artifact
        uses: actions/download-artifact@v4
        with:
          name: mlruns
          path: ./mlruns

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start MLflow Tracking Server (Docker)
        run: |
          docker run -d --name mlflow-server -p 5000:5000 \
            -v ${{ github.workspace }}/mlruns:/mlflow/mlruns \
            ghcr.io/mlflow/mlflow:v2.12.1 mlflow server \
            --backend-store-uri /mlflow/mlruns --host 0.0.0.0 --port 5000

      - name: Wait for MLflow to be ready
        run: |
          echo "Waiting for MLflow to be ready..."
          for i in {1..10}; do
            if curl -s http://127.0.0.1:5000; then
              echo "MLflow is up!"
              break
            fi
            echo "MLflow not ready yet. Retrying in 3 seconds..."
            sleep 3
          done

      - name: List MLflow experiments
        run: |
          python -c "import mlflow; mlflow.set_tracking_uri('http://127.0.0.1:5000'); print(mlflow.search_experiments())" 
  
# Third Job: Code Testing
  code-test:
    runs-on: ubuntu-latest
    needs: pre-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=darrellathaya_phone-predictor
            -Dsonar.organization=darrellathaya
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=.
            -Dsonar.python.version=3.10
            -Dsonar.python.coverage.reportPaths=coverage.xml


# Fourth Job: Build and Deploy
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [pre-build, model-test, code-test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download model artifact
        uses: actions/download-artifact@v4
        with:
          name: models
          path: models/

      - name: Run tests with coverage
        run: |
          coverage run -m pytest tests/
          coverage xml

      - name: Commit and push model files
        env:
          GH_TOKEN: ${{ secrets.RAILWAY_SECRET }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update trained models"
          file_pattern: "models/**"
